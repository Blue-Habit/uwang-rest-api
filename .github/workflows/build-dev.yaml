name: Create Dev Release

on:
  # allow to trigger job manually from UI
  workflow_dispatch:
  # trigger on main branch push (direct or via PR merge)
  push:
    branches:
      - 'development'

permissions:
  contents: read

env:
  APP_PATH: src/main/resources

# Disable parallel execution
concurrency: release

jobs:
  pr-build:
    name: Create Dev Release
    runs-on: ubuntu-latest
    # Required by 'git push'
    permissions:
      checks: write
      contents: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # Generate RELEASE_VERSION var (i.e. v12-63hef73)
      - name: Create Release Version
        run: echo "RELEASE_VERSION=v${{github.run_number}}-${GITHUB_SHA::7}" >> $GITHUB_ENV
      # Create but not yet push release tag before Gradle run
      - name: Create Release Tag
        run: git tag ${{env.RELEASE_VERSION}}
      # 'Build' task depends on 'check' which depends on 'test' task in its turn
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.bluhabit.id

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          registry: registry.bluhabit.id
          tags: |
            registry.bluhabit.id/uwang-rest-api:latest
            registry.bluhabit.id/uwang-rest-api:${{env.RELEASE_VERSION}}
          push: true
      # Pushing release tag only if everything before passed
      - name: Push Release Tag
        run: git push origin ${{env.RELEASE_VERSION}}

  deploy:
      runs-on: ubuntu-latest
      needs: pr-build
      name: Deploy to VPS
      steps:
        - name: Connect with SSH and Deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{secrets.SSH_HOST}}
            username: ${{secrets.SSH_USER}}
            password: ${{secrets.SSH_PASSWORD}}
            port: ${{secrets.SSH_PORT}}
            scripts: |
              cd /uwang
              docker-compose stop uwang-rest-api
              docker rm uwang-rest-api
              docker pull registry.bluhabit.id/uwang-rest-api:latest
              docker-compose up -d uwang-rest-api
              docker ps -a
