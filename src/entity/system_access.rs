//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "system_access")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub permission: String,
    pub group: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub deleted: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::admin_role::Entity")]
    AdminRole,
}

impl Related<super::admin_role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdminRole.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
